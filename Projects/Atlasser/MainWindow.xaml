<Window 
    x:Class="Atlasser.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:spriteSheets="clr-namespace:Atlasser.Model.SpriteSheets"
    xmlns:views="clr-namespace:Atlasser.Views"
    xmlns:controls="clr-namespace:Atlasser.Controls"
    xmlns:shell="clr-namespace:Microsoft.Windows.Shell;assembly=Microsoft.Windows.Shell"
    xmlns:model="clr-namespace:Atlasser.Model"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:viewModes="clr-namespace:Atlasser.Model.ViewModes"
    Title="Atlasser"
    WindowStyle="SingleBorderWindow"
    Background="{x:Null}"
    x:Name="window"
    Icon="Images/icon.ico">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Colours.xaml" />
                <ResourceDictionary Source="Resources.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <DataTemplate DataType="{x:Type viewModes:LoadDataPresenter}">
                <views:LoadDataView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewModes:SpriteSheetPresenter}">
                <views:SpriteSheetView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewModes:SerializeDataPresenter}">
                <views:SerializeDataView/>
            </DataTemplate>
            
        </ResourceDictionary>
    </Window.Resources>
    <shell:WindowChrome.WindowChrome>
        <shell:WindowChrome
            CornerRadius="0"
            CaptionHeight="0"
            GlassFrameThickness="1"/>
    </shell:WindowChrome.WindowChrome>
    <controls:WindowChromeBorder>
        <Grid Background="{StaticResource HatchPattern}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Border
                    Grid.Column="0"
                    Background="{StaticResource AccentHeavyBrush}"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    Width="150">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <Border 
                            Grid.Row="0"
                            Background="{StaticResource AccentLightBrush}"
                            Height="30"
                            Padding="10 0 10 0">
                            <TextBlock 
                                Text="Atlasser"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Foreground="{StaticResource ThemeIndependantLightBrush}"/>
                        </Border>
                        <ListBox 
                            Grid.Row="1"
                            Margin="0 25 0 0"
                            ItemsSource="{Binding ViewModes.Values}" 
                            SelectedItem="{Binding CurrentViewMode, Mode=TwoWay}">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock
                                        Margin="10 5 10 5"
                                        Text="{Binding Name}"
                                        Foreground="{StaticResource ThemeIndependantLightBrush}"/>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                            <ListBox.Resources>
                                <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsAccessible}" Value="False">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ListBox.Resources>
                        </ListBox>
                    </Grid>
                </Border>

                <ContentControl 
                    Grid.Column="1"
                    VerticalAlignment="Stretch"
                    HorizontalAlignment="Stretch"
                    Content="{Binding CurrentViewMode}"/>
            </Grid>

            <!-- Shell commands -->
            <Grid 
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top"
                Background="Transparent"
                MouseLeftButtonDown="WindowMouseLeftButtonDown">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                
                <StackPanel
                    Grid.Column="1"
                    Orientation="Horizontal"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top">
                    <Button Click="MinimizeWindowButtonClick">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MinimiseButtonStyle}">
                                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Foreground" Value="{StaticResource ThemeIndependantLightBrush}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Click="MaximizeWindowButtonClick">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaximiseButtonStyle}">
                                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding WindowState, ElementName=window}" Value="Maximized">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Foreground" Value="{StaticResource ThemeIndependantLightBrush}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Click="RestoreWindowButtonClick">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource RestoreButtonStyle}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding WindowState, ElementName=window}" Value="Maximized">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Foreground" Value="{StaticResource ThemeIndependantLightBrush}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Click="CloseWindowButtonClick">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource CloseButtonStyle}">
                                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Foreground" Value="{StaticResource ThemeIndependantLightBrush}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>
            </Grid>
        </Grid>
    </controls:WindowChromeBorder>
</Window>
